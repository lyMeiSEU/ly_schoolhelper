#ifndef _ACTION_LEX_H
#define _ACTION_LEX_H
#include <set>
void initFinalSet(std::set<unsigned int>& finalSet) {
finalSet.insert(1);
finalSet.insert(2);
finalSet.insert(3);
finalSet.insert(4);
finalSet.insert(5);
finalSet.insert(6);
finalSet.insert(7);
finalSet.insert(8);
finalSet.insert(9);
finalSet.insert(10);
finalSet.insert(11);
finalSet.insert(12);
finalSet.insert(13);
finalSet.insert(14);
finalSet.insert(15);
finalSet.insert(16);
finalSet.insert(19);
finalSet.insert(20);
finalSet.insert(21);
finalSet.insert(22);
finalSet.insert(23);
finalSet.insert(24);
finalSet.insert(25);
finalSet.insert(26);
finalSet.insert(27);
finalSet.insert(28);
finalSet.insert(29);
finalSet.insert(32);
finalSet.insert(33);
finalSet.insert(34);
finalSet.insert(35);
finalSet.insert(36);
finalSet.insert(37);
finalSet.insert(38);
finalSet.insert(39);
finalSet.insert(40);
finalSet.insert(41);
finalSet.insert(42);
finalSet.insert(43);
finalSet.insert(44);
finalSet.insert(45);
finalSet.insert(46);
finalSet.insert(47);
finalSet.insert(48);
finalSet.insert(49);
finalSet.insert(50);
finalSet.insert(51);
finalSet.insert(52);
finalSet.insert(54);
finalSet.insert(55);
finalSet.insert(56);
finalSet.insert(57);
finalSet.insert(58);
finalSet.insert(59);
finalSet.insert(60);
finalSet.insert(61);
finalSet.insert(62);
finalSet.insert(63);
finalSet.insert(64);
finalSet.insert(65);
finalSet.insert(66);
finalSet.insert(67);
finalSet.insert(68);
finalSet.insert(69);
finalSet.insert(70);
finalSet.insert(71);
finalSet.insert(72);
finalSet.insert(73);
finalSet.insert(74);
finalSet.insert(75);
finalSet.insert(76);
finalSet.insert(77);
}

std::string performAction(unsigned int state) {
switch(state) {
case 1 :++numCount; return "num";
case 2 :return "id";
case 3 :return "id";
case 4 :return "id";
case 5 :return "id";
case 6 :return "id";
case 7 :return "id";
case 8 :return "id";
case 9 :return "id";
case 10 :return "id";
case 11 :return "+";
case 12 :return "-";
case 13 :return "*";
case 14 :return "/";
case 15 :return "%";
case 16 :return "=";
case 19 :return "!";
case 20 :return "<";
case 21 :return ">";
case 22 :return "(";
case 23 :return ")";
case 24 :return "{";
case 25 :return "}";
case 26 :return "[";
case 27 :return "]";
case 28 :++line;return ";";
case 29 :return ",";
case 32 :return "id";
case 33 :return "id";
case 34 :return "id";
case 35 :return "if";
case 36 :return "id";
case 37 :return "id";
case 38 :return "id";
case 39 :return "id";
case 40 :return "id";
case 41 :return "+=";
case 42 :return "-=";
case 43 :return "*=";
case 44 :return "/=";
case 45 :return "%=";
case 46 :return "==";
case 47 :return "&&";
case 48 :return "||";
case 49 :return "!=";
case 50 :return "<=";
case 51 :return ">=";
case 52 :++numCount; return "num";
case 54 :++numCount; return "num";
case 55 :return "id";
case 56 :return "id";
case 57 :return "id";
case 58 :return "int";
case 59 :return "id";
case 60 :return "id";
case 61 :return "id";
case 62 :return "id";
case 63 :return "id";
case 64 :return "else";
case 65 :return "id";
case 66 :return "id";
case 67 :return "id";
case 68 :return "void";
case 69 :return "id";
case 70 :return "id";
case 71 :return "float";
case 72 :return "id";
case 73 :return "id";
case 74 :return "while";
case 75 :return "double";
case 76 :return "return";
case 77 :return "static";
default: return "";
}
}// end function
#endif //_ACTION_LEX_H
