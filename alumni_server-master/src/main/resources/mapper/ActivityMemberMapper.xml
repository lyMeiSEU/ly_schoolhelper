<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.seu.alumni_server.dao.mapper.ActivityMemberMapper">
	<resultMap id="BaseResultMap" type="cn.edu.seu.alumni_server.dao.entity.ActivityMember">
	</resultMap>

	<select id="getActivityMemberInfosByActivityId"
		resultType="cn.edu.seu.alumni_server.controller.dto.ActivityMemberBasicInfoDTO">
        SELECT AC.account_id,
               AC.name,
               AC.gender,
               AC.avatar,
               JB.job_id,
               JB.company     AS job_company,
               JB.position    AS job_position,
               EDU.education_id,
               EDU.education  AS education_level,
               EDU.school     AS education_school,
               EDU.college    AS education_college,
               EDU.start_time AS education_start_year
        FROM activity AS ACT
                 RIGHT JOIN
             (activity_member AS AM LEFT JOIN account AS AC ON AM.account_id = AC.account_id)
             ON AM.activity_id = ACT.activity_id
                 LEFT JOIN
             job AS JB ON AM.account_id = JB.account_id
                 LEFT JOIN
             education AS EDU ON AM.account_id = EDU.account_id
        WHERE ACT.is_available = 1
          AND AM.is_available = 1
          AND AC.valid_status = 1
          AND AM.activity_id = #{activityId}
          AND (EDU.valid_status = 1 OR ISNULL(EDU.valid_status))
          AND (ISNULL(JB.valid_status) OR JB.valid_status = 1)
        GROUP BY AM.account_id
        ORDER BY EDU.end_time DESC, EDU.u_time DESC, JB.start_time DESC, JB.u_time DESC
    </select>
	<update id="updateAllActivityMembersExceptStarterReadStatusByActivityId">
        UPDATE activity_member AS A
        SET A.read_status = #{readStatus}
        WHERE A.activity_id = #{activityId}
          AND A.is_available = 1
          AND A.account_id != (
            SELECT AC.account_id
            FROM activity AS AC
            WHERE AC.activity_id = #{activityId}
        )
    </update>
	<update id="updateAllActivityMembersReadStatus">
        UPDATE activity_member AS A
        SET A.read_status = #{readStatus}
        WHERE A.activity_id = #{activityId}
          AND A.is_available = 1
    </update>
	<update id="updateOneActivityMemberReadStatus">
        UPDATE activity_member AS A
        SET A.read_status = #{readStatus}
        WHERE A.activity_id = #{activityId}
          AND A.is_available = 1
          AND A.account_id = #{accountId}
    </update>
	<select id="getAvailableCreatorIdOfActivity" resultType="java.lang.Long">
        SELECT A.account_id
        FROM activity AS A
        WHERE A.activity_id = #{activityId}
          AND A.is_available = 1
    </select>
	<select id="getExistedEnrolledMember"
		resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM activity_member AS ACM, activity AS ACT
        WHERE ACM.is_available = 1
          AND ACM.activity_id = #{activityId}
          AND ACM.account_id = #{accountId}
          AND ACT.is_available = 1
          AND ACT.activity_id = #{activityId}
    </select>
	<select id="getRecordNumberByPrimaryKey" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM activity_member AS ACM, activity AS ACT
        WHERE ACM.activity_id = #{activityId}
          AND ACM.account_id = #{accountId}
          AND ACT.is_available = 1
          AND ACT.activity_id = #{activityId}
    </select>
</mapper>